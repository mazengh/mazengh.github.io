{"version":3,"sources":["components/Accordion/index.js","components/Heading.js","components/Accordion/Trigger.js","components/Accordion/Content.js","components/Accordion/Section.js","App.js","serviceWorker.js","index.js"],"names":["Accordion","props","addSectionId","id","setState","prevState","headingIds","getExpandableSections","sectionId","expandedSections","state","allowMultiple","slice","filter","sectId","handleToggle","expandables","includes","splice","indexOf","push","handleArrows","key","direction","length","newIndex","focusedHeadingId","handleHomeAndEnd","handleKeys","event","target","handler","keyHandlers","idOfElementToFocus","elementToFocus","document","getElementById","focus","preventDefault","handleFocus","headingId","ArrowUp","ArrowDown","Home","End","nextProps","nextState","this","level","accordionClasses","classes","className","onKeyDown","children","Component","defaultProps","Heading","memo","React","createElement","Trigger","expanded","ariaExpanded","headingClasses","aria-controls","ariaControls","aria-expanded","onClick","onFocus","label","propName","componentName","Error","Content","contentStyle","display","style","role","aria-labelledby","triggerId","Section","nextId","useState","accordionId","useEffect","Fragment","App","href","rel","accordionProps","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18df890f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Accordion.css';\r\n\r\nclass Accordion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedSections: [],\r\n      headingIds: [],\r\n      focusedHeadingId: '',\r\n    };\r\n\r\n    this.keyHandlers = {\r\n      ArrowUp: this.handleArrows,\r\n      ArrowDown: this.handleArrows,\r\n      Home: this.handleHomeAndEnd,\r\n      End: this.handleHomeAndEnd,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.expandedSections !== nextState.expandedSections) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addSectionId = (id) => {\r\n    this.setState((prevState) => {\r\n      return { headingIds: [...prevState.headingIds, id] };\r\n    });\r\n  };\r\n\r\n  getExpandableSections = (sectionId) => {\r\n    const { expandedSections } = this.state;\r\n    if (!this.props.allowMultiple) {\r\n      return expandedSections.filter((sectId) => sectionId === sectId);\r\n    }\r\n    return expandedSections.slice();\r\n  };\r\n\r\n  handleToggle = (sectionId) => {\r\n    let expandables = this.getExpandableSections(sectionId);\r\n\r\n    if (expandables.includes(sectionId)) {\r\n      expandables.splice(expandables.indexOf(sectionId), 1);\r\n    } else {\r\n      expandables.push(sectionId);\r\n    }\r\n\r\n    this.setState({\r\n      expandedSections: expandables,\r\n    });\r\n  };\r\n\r\n  handleArrows = (key) => {\r\n    const direction = key === 'ArrowDown' ? 1 : -1;\r\n    const { length } = this.state.headingIds;\r\n    const index = this.state.headingIds.indexOf(this.state.focusedHeadingId);\r\n    const newIndex = (index + length + direction) % length;\r\n    return this.state.headingIds[newIndex];\r\n  };\r\n  handleHomeAndEnd = (key) => {\r\n    return key === 'Home'\r\n      ? this.state.headingIds[0]\r\n      : this.state.headingIds[this.state.headingIds.length - 1];\r\n  };\r\n\r\n  handleKeys = (event) => {\r\n    if (!this.state.headingIds.includes(event.target.id)) return;\r\n    const { key } = event;\r\n    const handler = this.keyHandlers[key];\r\n    if (handler) {\r\n      const idOfElementToFocus = handler(key);\r\n      const elementToFocus = document.getElementById(idOfElementToFocus);\r\n      if (elementToFocus) elementToFocus.focus();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleFocus = (headingId) => {\r\n    this.setState({\r\n      focusedHeadingId: headingId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { level } = this.props;\r\n    const { expandedSections } = this.state;\r\n    const { addSectionId, handleToggle, handleFocus, handleKeys } = this;\r\n    const accordionClasses = 'Accordion ' + (this.props.classes ? this.props.classes : '');\r\n    return (\r\n      <div className={accordionClasses} onKeyDown={handleKeys}>\r\n        {this.props.children({ level, expandedSections, addSectionId, handleToggle, handleFocus })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordion.propTypes = {\r\n  allowMultiple: PropTypes.bool,\r\n  level: PropTypes.number,\r\n};\r\n\r\nAccordion.defaultProps = {\r\n  allowMultiple: false,\r\n  level: 1,\r\n};\r\n\r\nexport default Accordion;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Heading = memo((props) => {\r\n  return React.createElement(`h${props.level}`, {\r\n    children: props.children,\r\n    ...{ ...props, level: null },\r\n  });\r\n});\r\n\r\nHeading.propTypes = {\r\n  level: PropTypes.number,\r\n};\r\n\r\nHeading.defaultProps = {\r\n  level: 1,\r\n};\r\n\r\nexport default Heading;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Heading from '../Heading';\r\n\r\nconst Trigger = memo((props) => {\r\n  const expanded = props.expandedSections.includes(props.id);\r\n  const ariaExpanded = expanded ? 'true' : 'false';\r\n  const headingClasses = expanded ? 'Accordion__heading expanded' : 'Accordion__heading';\r\n  return (\r\n    <Heading className={headingClasses} level={props.level}>\r\n      <button\r\n        id={props.id}\r\n        aria-controls={props.ariaControls}\r\n        aria-expanded={ariaExpanded}\r\n        onClick={() => props.handleToggle(props.id)}\r\n        onFocus={() => props.handleFocus(props.id)}\r\n      >\r\n        {props.label}\r\n      </button>\r\n    </Heading>\r\n  );\r\n});\r\n\r\nTrigger.propTypes = {\r\n  level: PropTypes.number,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nTrigger.defaultProps = {\r\n  level: 1,\r\n  label: 'heading',\r\n  id: (props, propName, componentName) => {\r\n    if (!props.id) {\r\n      return new Error(`'id' prop was not specified in '${componentName}'.`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default Trigger;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Content = (props) => {\r\n  const contentStyle = {\r\n    display: props.expanded ? 'block' : 'none',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={props.sectionId}\r\n      className='Accordion__content'\r\n      style={contentStyle}\r\n      role='region'\r\n      aria-labelledby={props.triggerId}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  expanded: PropTypes.bool,\r\n  sectionId: PropTypes.string,\r\n  triggerId: PropTypes.string,\r\n};\r\n\r\nContent.defaultProps = {\r\n  level: 1,\r\n  label: 'heading',\r\n  id: (props, propName, componentName) => {\r\n    if (!props.id) {\r\n      return new Error(`'id' prop was not specified in '${componentName}'.`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default memo(Content);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport nextId from 'react-id-generator';\r\n\r\nimport Trigger from './Trigger';\r\nimport Content from './Content';\r\n\r\nconst Section = (props) => {\r\n  const id = nextId();\r\n  const [accordionId] = useState(`accordion-${id}`);\r\n  const [sectionId] = useState(`accordion-section-${id}`);\r\n  const expanded = props.expandedSections.includes(accordionId);\r\n\r\n  useEffect(() => {\r\n    props.addSectionId(accordionId);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Trigger id={accordionId} ariaControls={sectionId} {...props}></Trigger>\r\n      <Content sectionId={sectionId} expanded={expanded} triggerId={accordionId}>\r\n        {props.children}\r\n      </Content>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  addSectionId: PropTypes.func,\r\n  expandedSections: PropTypes.array,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport Accordion from './components/Accordion';\r\nimport AccordionSection from './components/Accordion/Section';\r\nimport Heading from './components/Heading';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <header className='App-header'>\r\n        <Heading className='App-title' level={1}>\r\n          React Accordion\r\n        </Heading>\r\n      </header>\r\n      <main className='App-content'>\r\n        <p>\r\n          A web accessible accordion component implemented based on the{' '}\r\n          <a\r\n            href='https://www.w3.org/TR/wai-aria-practices-1.1/examples/accordion/accordion.html'\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            W3 best practices\r\n          </a>\r\n          .\r\n        </p>\r\n\r\n        <Accordion classes='App-accordion-1' level={2} allowMultiple={false}>\r\n          {(accordionProps) => (\r\n            <React.Fragment>\r\n              <AccordionSection {...accordionProps} label='2020'>\r\n                <ul>\r\n                  <li>COVID-19 pandemic</li>\r\n                  <li>Prince Harry and Meghan Markle quit royal family</li>\r\n                  <li>Australian bushfires</li>\r\n                  <li>Kobe Bryant's death</li>\r\n                  <li>\"Murder hornets\" arrive in US</li>\r\n                </ul>\r\n              </AccordionSection>\r\n              <AccordionSection {...accordionProps} label='2019'>\r\n                <ul>\r\n                  <li>The Amazon Burns</li>\r\n                  <li>Notre-Dame cathedral in Paris ravaged by fire</li>\r\n                  <li>Second crash involving Boeing 737 Max</li>\r\n                  <li>Theresa May resigns after Brexit failure</li>\r\n                  <li>Hurricane Dorian hits the Bahamas</li>\r\n                </ul>\r\n              </AccordionSection>\r\n              <AccordionSection {...accordionProps} label='2018'>\r\n                <ul>\r\n                  <li>MeToo Movement Goes Global</li>\r\n                  <li>The Murder of Jamal Khashoggi</li>\r\n                  <li>Meghan Markle joined the British royal family</li>\r\n                  <li>Super Blue Blood Moon</li>\r\n                  <li>Wildfires ravaged California</li>\r\n                </ul>\r\n              </AccordionSection>\r\n              <AccordionSection {...accordionProps} label='2017'>\r\n                <ul>\r\n                  <li>Trump’s inauguration</li>\r\n                  <li>Russia’s election meddling</li>\r\n                  <li>Snapchat IPO</li>\r\n                  <li>Paris climate agreement</li>\r\n                  <li>Solar eclipse</li>\r\n                </ul>\r\n              </AccordionSection>\r\n            </React.Fragment>\r\n          )}\r\n        </Accordion>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}